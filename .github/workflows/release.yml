name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  macos:
    strategy:
      matrix:
        runner: [macos-latest, macos-13]
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Crystal
        env:
          HOMEBREW_NO_INSTALL_UPGRADE: 1
          HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
        run: brew update && brew install crystal || true
      - name: Install dependencies
        run: shards install --production --ignore-crystal-version
      - name: Build the binary
        run: |
          export LLVM_CONFIG="$(brew --prefix)/opt/llvm@18/bin/llvm-config"
          shards build crystalline --release --no-debug -Dpreview_mt --stats --progress --ignore-crystal-version
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: crystalline_${{ matrix.runner == 'macos-latest' && 'arm64' || 'x86_64' }}-apple-darwin
          path: ./bin/crystalline
  linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Build the static binary
        run: docker build -t crystalline .
      - name: Copy binary to host
        run: |
          docker run -v $PWD:/app/host --rm crystalline:latest cp ./bin/crystalline ./host/crystalline
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: crystalline_x86_64-unknown-linux-musl
          path: ./crystalline
  release:
    needs: [macos, linux]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./artifacts
      - name: Compress artifacts
        run: gzip -r ./artifacts
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Attach linux binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/crystalline_x86_64-unknown-linux-musl/crystalline.gz
          asset_name: crystalline_x86_64-unknown-linux-musl.gz
          asset_content_type: application/gzip
      - name: Attach macOS x86_64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/crystalline_x86_64-apple-darwin/crystalline.gz
          asset_name: crystalline_x86_64-apple-darwin.gz
          asset_content_type: application/gzip
      - name: Attach macOS arm64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/crystalline_arm64-apple-darwin/crystalline.gz
          asset_name: crystalline_arm64-apple-darwin.gz
          asset_content_type: application/gzip
